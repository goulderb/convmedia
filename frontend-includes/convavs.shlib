convertavs() {
	# Only autodetect if the video codec is MPEG-4, x264 autodetects on it's own.
	if [ -z "$THREADS" -a "$VCODEC" = "mpeg4" ]; then
		export THREADS="$(cat /proc/cpuinfo | grep processor | wc -l)"
	fi

	# Default to default preset.
	if [ -z "$PRESET" ]; then
		local PRESET="default"
	fi

	# Audio encoding
	info "Encoding audio"

	# Handle filters and resampling.
	if [ -n "$RESAMPLE" -a -n "$AF" ]; then
		local AF="$AF,lavcresample=$RESAMPLE"
		export MPLAYER_OPTS="$MPLAYER_OPTS -srate $RESAMPLE $AF"
	elif [ -n "$RESAMPLE" -a -z "$AF" ]; then
		local AF="-af lavcresample=$RESAMPLE"
		export MPLAYER_OPTS="$MPLAYER_OPTS -srate $RESAMPLE $AF"
	elif [ -z "$RESAMPLE" -a -n "$AF" ]; then
		export MPLAYER_OPTS="$MPLAYER_OPTS $AF"
	fi

	audio_codec_set_extension $ACODEC	

	# Actually encode audio file.
	audio_encode $ACODEC "$AUDIO_FILE" "$TMPDIR/audio.$EXT"

	if [ -n "$CROP" ]; then
		export VF="$VF -vf-pre crop=${CROP} -vf-add harddup"
	else
		export VF="$VF -vf-add harddup"
	fi

	# Video encoding
	echo
	info "Encoding video"
	info "Encoding log is at $TMPDIR/encoding.log"

	# Use video_select_codec to define encoding options.
	case $VCODEC in
	h264)
		video_codec_preset $VCODEC $PRESET
		if [ -n "$TUNE" ]; then
			video_codec_tune $VCODEC $TUNE
		fi
		video_configure_codec $VCODEC
		video_encode_avs "$1" "$TMPDIR/video.h264"
	;;
	mpeg4)
		video_codec_preset $VCODEC $PRESET
		if [ -n "$TUNE" ]; then
			video_codec_tune $VCODEC $TUNE
		fi
		video_configure_codec $VCODEC
		video_encode_avs "$1" "$TMPDIR/video.m4v"
	;;
	esac

	if [ -f "$TMPDIR/video.m4v" ]; then
		local VIDEO_FPS="$(mplayer_retrieve_info grep "$TMPDIR/video.m4v" ID_VIDEO_FPS)"
	elif [ -f "$TMPDIR/video.h264" ]; then
		local VIDEO_FPS="$(mplayer_retrieve_info grep "$TMPDIR/video.h264" ID_VIDEO_FPS)"
	fi

	echo
	info "Merging files into an $CONTAINER file"
	case $CONTAINER in
	mkv)
		if [ -f "$TMPDIR/video.m4v" ]; then
			mux_file mp4 "$TMPDIR/video.m4v" "$TMPDIR/video.mp4"
		elif [ -f "$TMPDIR/video.h264" ]; then
			mux_file mp4 "$TMPDIR/video.h264" "$TMPDIR/video.mp4"
		fi

		export FILEMERGE_ARGS="$TMPDIR/video.mp4 $SUBTITLE"
		export FILEMERGE_ARGS="$FILEMERGE_ARGS --delay 0:${AUDIO_DELAY}ms $TMPDIR/audio.$EXT"
		merge_files mkv "$OUTPUT"
	;;
	mp4)
		if [ -f "$TMPDIR/video.m4v" ]; then
			export FILEMERGE_ARGS="-add $TMPDIR/video.m4v"
		elif [ -f "$TMPDIR/video.h264" ]; then
			export FILEMERGE_ARGS="-add $TMPDIR/video.h264"
		fi
		if [ -n "$SUBTITLE" ]; then
			export FILEMERGE_ARGS="-add $SUBTITLE"
		fi
		export FILEMERGE_ARGS="$FILEMERGE_ARGS -add $TMPDIR/audio.$EXT:delay=${AUDIO_DELAY}"
		merge_files mp4 "$OUTPUT"
	;;
	esac

	info "Finished encoding, cleaning up and exiting."	
	rm -rf "$TMPDIR"
}
