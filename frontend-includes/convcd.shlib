populate_trackinfo_arrays() {
	if [ -z "${TITLES[*]}" ]; then
		export -a TITLES
		TITLES=("$(grep "${N}:" "${CDDB_FILE}" | cut -d: -f3 | sed -e 's^&^And^g' -e 's^\/^ - ^g' -e 's^\?^^g')")
	else
		TITLES=("${TITLES[@]}" "$(grep "${N}:" "${CDDB_FILE}" | cut -d: -f3 | sed -e 's^&^And^g' -e 's^\/^ - ^g' -e 's^\?^^g')")
	fi

	if [ -z "${ARTISTS[*]}" ]; then
		export -a ARTISTS
		ARTISTS=("$(grep "${N}:" "${CDDB_FILE}" | cut -d: -f2 | sed -e 's^&^And^g' -e 's^\/^ - ^g')")
	else
		ARTISTS=("${ARTISTS[@]}" "$(grep "${N}:" "${CDDB_FILE}" | cut -d: -f2 | sed -e 's^&^And^g' -e 's^\/^ - ^g')")
	fi

	if [ -z "${TRACKNUMS[*]}" ]; then
		export -a TRACKNUMS
		TRACKNUMS=("$I")
	else
		TRACKNUMS=("${TRACKNUMS[@]}" "$I")
	fi
}

set_trackinfo() {
	export ARTIST="${ARTISTS[$1]}"
	export TITLE="${TITLES[$1]}"
	export TRACKNUM="${TRACKNUMS[$1]}"
}

set_albuminfo() {
	export ALBUM="$(grep "album:" "${CDDB_FILE}" | cut -d: -f2 | sed -e 's^&^And^g' -e 's^\/^ - ^g')"
	export YEAR="$(grep "year:" "${CDDB_FILE}" | cut -d: -f2)"
	export TRACKS="$(grep 'ntr:' "${CDDB_FILE}" | cut -d: -f2)"
}

handle_encoding() {
	set_trackinfo $1
	set_masks
	
	if [ ! -d "$DIR_MASK" ]; then
		mkdir -p "$DIR_MASK"
	fi

	case $ACODEC in
	vorbis)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.ogg"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.ogg"
		set_common_metatags "${DIR_MASK}/${FILE_MASK}.ogg"
		return 0
	;;
	aac-*)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.mp4"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.mp4"
		set_common_metatags "${DIR_MASK}/${FILE_MASK}.mp4"
		return 0
	;;
	mp3)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.mp3"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.mp3"
		set_common_metatags "${DIR_MASK}/${FILE_MASK}.mp3"
		return 0
	;;
	flac)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.flac"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.flac"
		set_common_metatags "${DIR_MASK}/${FILE_MASK}.flac"
		return 0
	;;
	*)
		info "Supported formats: vorbis, flac, mp3, aac-lc, aac-hev1, aac-hev2"
		die "Unsupported audio codec specified!"
		return 1
	;;
	esac

	restore_masks
}

convert_cd() {
	set_albuminfo

	for i in $(seq 0 $TRACKS); do
		# A stupidly complicated bit of code to do an insanely simple task, make all track numbers double-digit or higher.
		if [ ! "$(echo -n "$i" | wc -m)" = "2" -a "$i" != "9" ]; then
			export I="$i"
			((I++))
			export I="0${I}"
			export N="0${i}"
		elif [ ! "$(echo -n "$i" | wc -m)" = "2" -a "$i" = "9" ]; then
			export I="$i"
			((I++))
			export N="0${i}"
		else
			export I="${i}"
			((I++))
			export N="$i"
		fi
		
		populate_trackinfo_arrays
	done

	# Print album information out.
	echo "Album title: ${ALBUM}"
	echo "Year of release: ${YEAR}"
	for i in $(seq 0 "$TRACKS"); do
		set_trackinfo $i
		set_masks
		echo "Track $TRACKNUM: $TITLE by $ARTIST"
		restore_masks
	done

	for i in $(seq 0 $TRACKS); do
		set_trackinfo $i
		set_masks

		if [ ! -d "$DIR_MASK" ]; then
			mkdir -p "$DIR_MASK"
		fi

		info "Ripping ${FILE_MASK}"
		if [ -n "$SECURE" ]; then
			audio_extract_track secure "$TRACKNUM" "${TMPDIR}/${FILE_MASK}.wav"
		else
			audio_extract_track insecure "$TRACKNUM" "${TMPDIR}/${FILE_MASK}.wav"
		fi

		restore_masks
	done

	# We need an array containing our indexes for handle_encoding to get the tagging information.
	local -a INDEX
	for i in $(seq 0 $TRACKS); do
		INDEX=("${INDEX[@]}" "$i")
	done

	run_parallel handle_encoding "${INDEX[@]}"
}
