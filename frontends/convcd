#!/bin/sh

export TMPDIR="/tmp/convcd-$$"
export INCDIR="/usr/local/share/convmedia/includes"
export CHARSET="UTF-8"
export VERBOSE="1"
export INPUT_IS_WAV="1"
export CDDB_CACHE_DIR="${HOME}/.convmedia/cddb_cache"
export MAX_RERIPS=20

if [ ! -d "$TMPDIR" ]; then
	mkdir "$TMPDIR"
else
	rm -rf "$TMPDIR"
	mkdir "$TMPDIR"
fi

if [ -f /etc/convmedia/convcd.conf ]; then
	source /etc/convmedia/convcd.conf
else
	echo "Can't load configuration, exiting."
	exit 1
fi

if [ -f $INCDIR/generic-functions.shlib -a -f $INCDIR/container-functions.shlib -a -f $INCDIR/audio-functions.shlib ]; then
	source $INCDIR/generic-functions.shlib
	source $INCDIR/container-functions.shlib
	source $INCDIR/audio-functions.shlib
else
	echo "Can't load functions, exiting."
	exit 1
fi

set_masks() {
	# Export title/artist/album/tracknum, then change FILE_MASK accordingly.
	export TITLE="$(grep "${N}:" ${TMPDIR}/tracks.txt | cut -d: -f2 | sed -e 's^&^And^g' -e 's^\/^ - ^g' -e 's^\?^^g')"
	export ARTIST="$(grep "${N}:" ${TMPDIR}/tracks-artists.txt | cut -d: -f2 | sed -e 's^&^And^g' -e 's^\/^ - ^g')"
	export ALBUM="$(cat ${TMPDIR}/album.txt | grep "album:" | cut -d: -f2 | sed -e 's^&^And^g' -e 's^\/^ - ^g')"
	export YEAR="$(cat ${TMPDIR}/album.txt | grep "year:" | cut -d: -f2)"
	export TRACKNUM="$I"
	export ORIG_FMASK="$FILE_MASK"
	export ORIG_DMASK="$DIR_MASK"
	export FILE_MASK="$(echo "$FILE_MASK" | sed "s^%TITLE^$TITLE^g" | sed "s^%ARTIST^$ARTIST^g" | sed "s^%ALBUM^$ALBUM^g" | sed "s:%TRACKNUM:$TRACKNUM:g" | \
		sed "s:%YEAR:$TRACK:g")"
	export DIR_MASK="$(echo "$DIR_MASK" | sed "s^%TITLE^$TITLE^g" | sed "s^%ARTIST^$ARTIST^g" | sed "s^%ALBUM^$ALBUM^g" | sed "s:%TRACKNUM:$TRACKNUM:g" | \
		sed "s:%YEAR:$TRACK:g")"
}

restore_masks() {
	unset TITLE ARTIST ALBUM TRACKNUM
	export FILE_MASK="$ORIG_FMASK"
	export DIR_MASK="$ORIG_DMASK"
}

help() {
	echo "convcd: A secure Audio CD ripper."
	echo
	echo "Usage: $0 [OPTIONS]"
	echo
	echo "Supported audio formats: vorbis, mp3, aac-lc, aac-hev1, aac-hev2, flac"
	echo
	echo "Options:"
	echo "-f: Format you want the CD to be ripped to."
	echo "-q: Encoding quality, highest quality is 10, lowest is 1."
	echo "-d: CD-Rom device node to use."
	echo "-i: Interactive mode, convcd may prompt you to change certain things, such as metadata."
	echo "-m: Multi-artist mode, use this for CD's that have multiple artists rather than one."
	echo "-n: Maximum number of rerips to perform before accepting a possibly imperfect result."
	echo "-b: Enable debugging mode (set -e -x)."
	echo "-h: Print this help."
	rm -rf "$TMPDIR"
	exit 0
}

while getopts 'f:a:q:r:d:n:wbhmi' z; do
	case "$z" in
	f)
		export ACODEC="$OPTARG"
	;;
	q)
		export AQUALITY="$OPTARG"
	;;
	d)
		export CD_DEVICE="$OPTARG"
	;;
	b)
		set -e -x
	;;
	i)
		export INTERACTIVE="1"
	;;
	m)
		export MULTI_ARTIST="1"
	;;
	n)
		export MAX_RERIPS="$OPTARG"
	;;
	h)
		help
	;;
 esac
done
shift $(($OPTIND-1))

if [ -z $ACODEC ]; then
	help
fi

export PARANOIA_OPTS="--never-skip=40 -d $CD_DEVICE"
export CDDISCID_OPTS="$CD_DEVICE"

cd-discid $CDDISCID_OPTS &> /dev/null

if [ "$?" = "1" ]; then
	die "There is no CD in the drive to rip."
fi

info "Retrieving information about this CD from CDDB"
cddb_query_info
if [ -n "$CDDB_CACHE_HIT" ]; then
	info "Retrieved information from cache, done."
else
	info "Retrieved information from CDDB, done."
fi
export ALBUM="`cat "${TMPDIR}"/album.txt | grep "album:" | cut -d: -f2 | sed 's^&^And^g'`"
export YEAR="`cat "${TMPDIR}"/album.txt | grep "year:" | cut -d: -f2`"
echo "Album: $ALBUM" >> "${TMPDIR}"/album-info.txt
echo "Year of release: $YEAR" >> "${TMPDIR}"/album-info.txt
unset ALBUM
for i in $(seq 0 $TRACKS); do
	if [ ! "$(echo -n "$i" | wc -m)" = "2" ]; then
		export N="0${i}"
	else
		export N="$i"
	fi
	set_masks
	echo "Track $N: $TITLE by $ARTIST" >> $TMPDIR/album-info.txt
	restore_masks
done
cat "${TMPDIR}"/album-info.txt

if [ -n "$INTERACTIVE" ]; then
	echo -n "Do you want to edit the song titles, artist(s) and album name information now? (y/n) "; read answer
	if [ "$answer" = "y" ]; then
		$EDITOR "${TMPDIR}"/tracks.txt
		$EDITOR "${TMPDIR}"/tracks-artists.txt
		$EDITOR "${TMPDIR}"/album.txt
		# Recalculate number of tracks to rip by using tracks.txt.
		export TRACKS="$(cat "${TMPDIR}"/tracks.txt | wc -l)"
		export TRACKS="$(expr $TRACKS - 1)"
	fi
fi

for i in $(seq 0 $TRACKS); do
	if [ ! "$(echo -n "$i" | wc -m)" = "2" -a "$i" != "9" ]; then
		export I="$i"
		((I++))
		export I="0${I}"
		export N="0${i}"
	elif [ ! "$(echo -n "$i" | wc -m)" = "2" -a "$i" = "9" ]; then
		export I="$i"
		((I++))
		export N="0${i}"
	else
		export I="${i}"
		((I++))
		export N="$i"
	fi

	set_masks

	if [ ! -d "$DIR_MASK" ]; then
		mkdir -p "$DIR_MASK"
	fi

	echo
	info "Ripping ${FILE_MASK}"
	rip_track "$I" "${TMPDIR}/${FILE_MASK}.wav"

	case $ACODEC in
	vorbis)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.ogg"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.ogg"
		set_common_metatags ogg "${DIR_MASK}/${FILE_MASK}.ogg"
		echo
	;;
	aac-*)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.mp4"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.mp4"
		set_common_metatags mp4 "${DIR_MASK}/${FILE_MASK}.mp4"
		echo
	;;
	mp3)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.mp3"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.mp3"
		set_common_metatags id3 "${DIR_MASK}/${FILE_MASK}.mp3"
		echo
	;;
	flac)
		info "Encoding ${FILE_MASK}.wav to ${ACODEC}"
		audio_encode $ACODEC "${TMPDIR}/${FILE_MASK}.wav" "${DIR_MASK}/${FILE_MASK}.flac"
		info "Setting metatags for ${DIR_MASK}/${FILE_MASK}.flac"
		set_common_metatags flac "${DIR_MASK}/${FILE_MASK}.flac"
		echo
	;;
	esac
	restore_masks
done

info "Finished ripping, cleaning up."
rm -rf "$TMPDIR"
if [ -n "$EJECT" ]; then
	info "Ejecting CD."
	eject "$CD_DEVICE"
fi
