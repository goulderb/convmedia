decode_audio_pipe() {
	if [ -n "$1" -a -n "$2" ]; then
		mkfifo "$2"
		mplayer $MPLAYER_OPTS "$1" -nocache -vc ffsiff -vo null -ao pcm:file="$2":fast -benchmark &> /dev/null &
	fi
}

decode_audio_file() {
	if [ -n "$1" -a -n "$2" -a -z "$VERBOSE" ]; then
		mplayer $MPLAYER_OPTS "$1" -nocache -vc ffsiff -vo null -ao pcm:file="$2":fast -benchmark &> /dev/null
	elif [ -n "$1" -a -n "$2" -a -n "$VERBOSE" ]; then
		mplayer $MPLAYER_OPTS "$1" -nocache -vc ffsiff -vo null -ao pcm:file="$2":fast -benchmark
	fi
}

rip_track() {
	if [ "$MAX_RERIPS" != "0" ]; then
		mkdir -p "$TMPDIR/rip-tmp"
		echo "Doing first rip..."
		cdparanoia ${PARANOIA_OPTS} "$1" "$TMPDIR/rip-tmp/1.wav"
		echo "Doing second rip..."
		cdparanoia ${PARANOIA_OPTS} "$1" "$TMPDIR/rip-tmp/2.wav"

		echo -n "Comparing files..."
		cmp "$TMPDIR/rip-tmp/1.wav" "$TMPDIR/rip-tmp/2.wav" &> /dev/null
		if [ "$?" = "1" ]; then
			echo " difference found."
			for i in `seq 1 $MAX_RERIPS`; do
				rm "$TMPDIR/rip-tmp/1.wav" "$TMPDIR/rip-tmp/2.wav"
				echo
				echo "Rerip $i..."
				echo
				echo "Doing first rip..."
				cdparanoia ${PARANOIA_OPTS} "$1" "$TMPDIR/rip-tmp/1.wav"
				echo "Doing second rip..."
				cdparanoia ${PARANOIA_OPTS} "$1" "$TMPDIR/rip-tmp/2.wav"
			
				echo -n "Comparing files..."
				cmp "$TMPDIR/rip-tmp/1.wav" "$TMPDIR/rip-tmp/2.wav" &> /dev/null
				if [ "$?" = "1" ]; then
					echo " difference found, retrying."
					continue
				else
					echo " match"
					export MATCH=1
					break
				fi
			done
			if [ -z "$MATCH" ]; then
				echo " hit max rerips."
			fi
		else
			echo " match."
		fi

		mv "$TMPDIR/rip-tmp/1.wav" "$2"
	else
		 cdparanoia ${PARANOIA_OPTS} "$1" "$2"
	fi
}

get_qualitymap() {
	case "$1" in
	bitrate)
		if [ "$AQUALITY" = "1" ]; then
		 echo "80"
		elif [ "$AQUALITY" = "2" ]; then
		 echo "96"
		elif [ "$AQUALITY" = "3" ]; then
		 echo "112"
		elif [ "$AQUALITY" = "4" ]; then
		 echo "128"
		elif [ "$AQUALITY" = "5" ]; then
		 echo "160"
		elif [ "$AQUALITY" = "6" ]; then
		 echo "192"
		elif [ "$AQUALITY" = "7" ]; then
		 echo "224"
		elif [ "$AQUALITY" = "8" ]; then
		 echo "256"
		elif [ "$AQUALITY" = "9" ]; then
		 echo "320"
		elif [ "$AQUALITY" = "10" ]; then
		 echo "500"
		fi
		;;
	invertq)
		if [ "$AQUALITY" = "1" ]; then
		 echo "8"
		elif [ "$AQUALITY" = "2" ]; then
		 echo "7"
		elif [ "$AQUALITY" = "3" ]; then
		 echo "6"
		elif [ "$AQUALITY" = "4" ]; then
		 echo "5"
		elif [ "$AQUALITY" = "5" ]; then
		 echo "4"
		elif [ "$AQUALITY" = "6" ]; then
		 echo "3"
		elif [ "$AQUALITY" = "7" ]; then
		 echo "2"
		elif [ "$AQUALITY" -ge "8" ]; then
		 echo "1"
		fi
	;;
	esac
}

audio_encode() {
	if [ -z "$INPUT_IS_WAV" ]; then
		export ENC_FILE="$TMPDIR/audio_enc.wav"
	else
		export ENC_FILE="$2"
	fi

	if [ -z "$INPUT_IS_WAV" -a -z "$DECODE_FIRST" ]; then
		decode_audio_pipe "$2" "$ENC_FILE"
	elif [ -z "$INPUT_IS_WAV" -a -n "$DECODE_FIRST" ]; then
		decode_audio_file "$2" "$ENC_FILE"
	fi

	local BR="$(( $(get_qualitymap bitrate) * 1024 ))"

	case "$1" in
	vorbis)
		if [ -z "$VERBOSE" ]; then
			oggenc -Q -q "$AQUALITY" -o "$3" "$ENC_FILE"
		else
			oggenc -q "$AQUALITY" -o "$3" "$ENC_FILE"
		fi
		# We might not have Vorbisgain, make sure we do otherwise DON'T try to call it.
		if [ -n "$(which vorbisgain)" ]; then
			if [ -z "$VERBOSE" ]; then
				vorbisgain -q -f "$3"
			else
				vorbisgain -f "$3"
			fi
		fi
		rm "$ENC_FILE"
	;;
	flac)
		if [ -z "$VERBOSE" ]; then
			flac -s -$(get_qualitymap invertq) -o "$3" "$ENC_FILE" &> /dev/null
			metaflac --add-replay-gain "$3" &> /dev/null
		else
			flac -s -$(get_qualitymap invertq) -o "$3" "$ENC_FILE"
			metaflac --add-replay-gain "$3"
		fi
		rm "$ENC_FILE"
	;;
	aac-lc)
		if [ -z "$VERBOSE" ]; then
			neroAacEnc -lc -br $BR -if "$ENC_FILE" -of "$3" &> /dev/null
		else
			neroAacEnc -lc -br $BR -if "$ENC_FILE" -of "$3"
		fi
		rm "$ENC_FILE"
	;;
	aac-hev1)
		if [ -z "$VERBOSE" ]; then
			neroAacEnc -he -br $BR -if "$ENC_FILE" -of "$3" &> /dev/null
		else
			neroAacEnc -he -br $BR -if "$ENC_FILE" -of "$3"
		fi
		rm "$ENC_FILE"
	;;
	aac-hev2)
		if [ -z "$VERBOSE" ]; then
			neroAacEnc -hev2 -br $BR -if "$ENC_FILE" -of "$3" &> /dev/null
		else
			neroAacEnc -hev2 -br $BR -if "$ENC_FILE" -of "$3"
		fi
		rm "$ENC_FILE"
	;;
	mp3)
		if [ -z "$VERBOSE" ]; then
			lame --replaygain-accurate -S --abr $(get_qualitymap bitrate) "$ENC_FILE" "$3" &> /dev/null
		else
			lame --replaygain-accurate -S --abr $(get_qualitymap bitrate) "$ENC_FILE" "$3"
		fi
		rm "$ENC_FILE"
	;;
	esac
}
