# DEPENDS: audio-functions

avs2yuv() {
	if [ -n "`which wine`" -a -f /usr/local/share/convmedia/bin/avs2yuv.exe ]; then
		wine /usr/local/share/convmedia/bin/avs2yuv.exe "$@"
	elif [ -z "`which wine`" ]; then
		die "Wine is not installed, avs2yuv requires wine to function."
	elif [ ! -f /usr/local/share/convmedia/bin/avs2yuv.exe ]; then
		die "The avs2yuv binary is not present in /usr/local/share/convmedia/bin/."
	fi
}

video_encode_avs() {
	if [ -z "`which wine`" ]; then
		die "Wine is not installed, encoding from an AviSynth script requires wine to function."
	fi

	# If schedtool is available, execute mencoder as SCHED_BATCH, as this provides some minor performance gains.
	if [ -n "`which schedtool`" ]; then
		alias mencoder="schedtool -B -e mencoder"
	fi

	case $PASS in
	1)
		mkfifo "$TMPDIR/avs2yuv.y4m"
		mencoder -audiofile "$AUDIO_FILE" $MENCODER_OPTS "$TMPDIR/avs2yuv.y4m" -oac pcm -ovc $OVC $OVCOPTS $VF -of rawvideo=1 -o "$2" \
			&> "$TMPDIR/encoding.log" &
		avs2yuv "$1" -o "$TMPDIR/avs2yuv.y4m"
		rm "$TMPDIR/encoding.log"
	;;
	2)
		mkfifo "$TMPDIR/avs2yuv.y4m"
		mencoder -audiofile "$AUDIO_FILE" -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$TMPDIR/avs2yuv.y4m" -nosound -ovc $OVC $OVCOPTS_PASS1 $VF \
			-of rawvideo=1 -o /dev/null &> "$TMPDIR/encoding.log" &
		avs2yuv "$1" -o "$TMPDIR/avs2yuv.y4m"
		rm "$TMPDIR/encoding.log"
		mencoder -audiofile "$AUDIO_FILE" -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$TMPDIR/avs2yuv.y4m" -oac pcm -ovc $OVC $OVCOPTS $VF \
			-of rawvideo=1 -o "$2" &> "$TMPDIR/encoding.log" &
		avs2yuv "$1" -o "$TMPDIR/avs2yuv.y4m"
		rm "$TMPDIR/encoding.log"
	;;
	3)
		mkfifo "$TMPDIR/avs2yuv.y4m"
		mencoder -audiofile "$AUDIO_FILE" -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$TMPDIR/avs2yuv.y4m" -nosound -ovc $OVC $OVCOPTS_PASS1 $VF \
			-of rawvideo=1 -o /dev/null &> "$TMPDIR/encoding.log" &
		avs2yuv "$1" -o "$TMPDIR/avs2yuv.y4m"
		rm "$TMPDIR/encoding.log"
		mencoder -audiofile "$AUDIO_FILE" -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$TMPDIR/avs2yuv.y4m" -nosound -ovc $OVC $OVCOPTS_PASS2 $VF \
			-of rawvideo=1 -o /dev/null &> "$TMPDIR/encoding.log" &
		avs2yuv "$1" -o "$TMPDIR/avs2yuv.y4m"
		rm "$TMPDIR/encoding.log"
		mencoder -audiofile "$AUDIO_FILE" -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$TMPDIR/avs2yuv.y4m" -oac pcm -ovc $OVC $OVCOPTS $VF \
			-of rawvideo=1 -o "$2" &> "$TMPDIR/encoding.log" &
		avs2yuv "$1" -o "$TMPDIR/avs2yuv.y4m"
		rm "$TMPDIR/encoding.log"
	;;
	esac
}


video_encode() {
	# If schedtool is available, execute mencoder as SCHED_BATCH, as this provides some minor performance gains.
	if [ -n "`which schedtool`" ]; then
		alias mencoder="schedtool -B -e mencoder"
	fi

	case $PASS in
	1)
		mencoder $MENCODER_OPTS "$1" -oac pcm -ovc $OVC $OVCOPTS $VF -of rawvideo=1 -o "$2"
	;;
	2)
		mencoder -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$1" -nosound -ovc $OVC $OVCOPTS_PASS1 $VF -of rawvideo=1 -o /dev/null
		mencoder -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$1" -oac pcm -ovc $OVC $OVCOPTS $VF -of rawvideo=1 -o "$2"
	;;
	3)
		mencoder -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$1" -nosound -ovc $OVC $OVCOPTS_PASS1 $VF -of rawvideo=1 -o /dev/null
		mencoder -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$1" -nosound -ovc $OVC $OVCOPTS_PASS2 $VF -of rawvideo=1 -o /dev/null
		mencoder -passlogfile "$TMPDIR/passlog.log" $MENCODER_OPTS "$1" -oac pcm -ovc $OVC $OVCOPTS $VF -of rawvideo=1 -o "$2"
	;;
	esac
}

video_cropdetect() {
	export CROPARGS="-chapter 2 -endpos 5 -ovc lavc -nosound"
	echo "`mencoder $MENCODER_OPTS "$1" $CROPARGS -vf cropdetect -o /dev/null 2>&1 | grep vf | tail -n 1 | cut -d "=" -f 2 | tr -d ')' | sed 's/\.//'`"
	unset CROPARGS
}

video_calculate_bitrate() {
	local SIZE=`echo "((($1 * 1024) - (($VIDEO_FPS * $VIDEO_LENGTH * 24) / 1024)) * 1024) / 1000" | bc`
	echo "($SIZE * 8) / $VIDEO_LENGTH - `get_qualitymap bitrate`" | bc
}
